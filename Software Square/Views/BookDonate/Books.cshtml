@using Microsoft.AspNetCore.Identity
@using Software_Square.Constants;
@using Software_Square.Data;
@inject SignInManager<ApplicationUser> SignInManager

@model IEnumerable<Software_Square.Models.bookDonate>

@{
	ViewData["Title"] = "Books";
	Layout = "~/Views/Shared/_Layout.cshtml";
	int approveId = (int)ViewData["ApproveId"];
	int rejectId = (int)ViewData["RejectId"];
	int pendingId = (int)ViewData["PendingId"];

}



<h1>Books</h1>

<p style= "text-align: right;">
	@if (SignInManager.IsSignedIn(User))
	{
		<a asp-action="Donate" class="btn" style="background-color:#081f62; color: White;">Donate Book</a>
	}
</p>
<table class="table">
	<thead class="table-active" >
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Title)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Description)
			</th>
			<th></th>
			<th></th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			@if (SignInManager.IsSignedIn(User))
			{
				
																																						<tr>
																																						<td>
							@Html.DisplayFor(modelItem => item.Title)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Description)
						</td>	
						<td>
							<button onclick="return BookDownload('@item.Title', '@item.path');" class="btn" style="background-color:#081f62; color: White;">Download</button>
						</td>
						@if (User.IsInRole(Roles.Admin.ToString()))
						{
							<td>
								@if (item.Status == approveId || item.Status == pendingId)
								{
									<a asp-action="StatusChange" asp-route-Id="@item.Id" asp-route-Status="@rejectId" class="btn btn-danger" style="color: White;">Reject</a>
								}

							</td>
							<td>
								@if (item.Status == rejectId || item.Status == pendingId)
								{
									<a asp-action="StatusChange" asp-route-Id="@item.Id" asp-route-Status="@approveId" class="btn" style="background-color:#081f62; color: White;">Approve</a>
								}
							</td>
						}
						
						</tr>
				
			}
			else if (item.Status == approveId)
			{
				<tr>
				<td>
						@Html.DisplayFor(modelItem => item.Title)
				</td>
				<td>
						@Html.DisplayFor(modelItem => item.Description)
				</td>	
				<td>
						<button onclick="return BookDownload('@item.Title', '@item.path');"  class="btn" style="background-color:#081f62; color: White;">Download</button>
				</td>
				</tr>
			}
		}
	</tbody>
</table>



<script type="text/javascript" language="javascript">
	
	function BookDownload(fileName, fileUrl) {
		var st = window.location.href;
		var adr = st.substr(0, st.indexOf('BookDonate'));
		//alert(adr);
		//adr=adr+fileUrl;
		adr=adr+fileUrl;
		//alert(adr);


		window.location=adr;
		
	//alert("YD");
	// Create a new anchor element to trigger the download
	//const downloadLink = document.createElement("a");

	// Set the href and download attributes to trigger the download
	//downloadLink.href = fileUrl;
	//downloadLink.download = fileName;

	// Trigger the click event on the download link
	//downloadLink.click();
}

function getAlert (){
	alert("HEllo");
	
}
</script>